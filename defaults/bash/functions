# Compression
compress() { tar -czf "${1%/}.tar.gz" "${1%/}"; }
alias decompress="tar -xzf"

# Convert webm files generated by the Gnome screenshot video recorder to mp4s that are more compatible
webm2mp4() {
  input_file="$1"
  output_file="${input_file%.webm}.mp4"
  ffmpeg -i "$input_file" -c:v libx264 -preset slow -crf 22 -c:a aac -b:a 192k "$output_file"
}

# Write iso file to sd card
iso2sd() {
  if [ $# -ne 2 ]; then
    echo "Usage: iso2sd <input_file> <output_device>"
    echo "Example: iso2sd ~/Downloads/ubuntu-25.04-desktop-amd64.iso /dev/sda"
    echo -e "\nAvailable SD cards:"
    lsblk -d -o NAME | grep -E '^sd[a-z]' | awk '{print "/dev/"$1}'
  else
    sudo dd bs=4M status=progress oflag=sync if="$1" of="$2"
    sudo eject $2
  fi
}

# Create a desktop launcher for a web app
web2app() {
  if [ "$#" -ne 3 ]; then
    echo "Usage: web2app <AppName> <AppURL> <IconURL> (IconURL must be in PNG -- use https://dashboardicons.com)"
    return 1
  fi

  local APP_NAME="$1"
  local APP_URL="$2"
  local ICON_URL="$3"
  local ICON_DIR="$HOME/.local/share/applications/icons"
  local DESKTOP_FILE="$HOME/.local/share/applications/${APP_NAME}.desktop"
  local ICON_PATH="${ICON_DIR}/${APP_NAME}.png"

  mkdir -p "$ICON_DIR"

  if ! curl -sL -o "$ICON_PATH" "$ICON_URL"; then
    echo "Error: Failed to download icon."
    return 1
  fi

  cat > "$DESKTOP_FILE" <<EOF
[Desktop Entry]
Version=1.0
Name=$APP_NAME
Comment=$APP_NAME
Exec=google-chrome --app="$APP_URL" --name="$APP_NAME" --class="$APP_NAME" --window-size=800,600
Terminal=false
Type=Application
Icon=$ICON_PATH
Categories=GTK;
MimeType=text/html;text/xml;application/xhtml_xml;
StartupNotify=true
EOF

  chmod +x "$DESKTOP_FILE"
}

web2app-remove() {
  if [ "$#" -ne 1 ]; then
    echo "Usage: web2app-remove <AppName>"
    return 1
  fi

  local APP_NAME="$1"
  local ICON_DIR="$HOME/.local/share/applications/icons"
  local DESKTOP_FILE="$HOME/.local/share/applications/${APP_NAME}.desktop"
  local ICON_PATH="${ICON_DIR}/${APP_NAME}.png"

  rm "$DESKTOP_FILE"
  rm "$ICON_PATH"
}

# Move a reference to a .desktop file, like Spotify.desktop, to a named folder, like Xtra.
# Don't use full path for the .desktop file.
# KDE: Move a .desktop file to a named folder (category) in the application menu
app2folder() {
  if [ "$#" -ne 2 ]; then
    echo "Usage: app2folder <desktop_file.desktop> <category>"
    echo "Example categories: Multimedia, Internet, Office, Games, Graphics, System, Utilities"
    return 1
  fi

  local DESKTOP_FILE="$1"
  local CATEGORY="$2"
  local DESKTOP_PATH="$HOME/.local/share/applications/$DESKTOP_FILE"

  if [ ! -f "$DESKTOP_PATH" ]; then
    echo "Error: $DESKTOP_PATH not found."
    return 1
  fi

  # Update or add the Categories field
  if grep -q "^Categories=" "$DESKTOP_PATH"; then
    sed -i "s|^Categories=.*|Categories=$CATEGORY;|" "$DESKTOP_PATH"
  else
    echo "Categories=$CATEGORY;" >> "$DESKTOP_PATH"
  fi

  update-desktop-database "$HOME/.local/share/applications" >/dev/null 2>&1
  echo "$DESKTOP_FILE moved to category $CATEGORY."
}

# Remove desktop app from folder (KDE version)
app2folder-remove() {
  if [ "$#" -ne 2 ]; then
    echo "Usage: app2folder-remove <desktop_file.desktop> <category>"
    echo "Example categories: Multimedia, Internet, Office, Games, Graphics, System, Utilities"
    return 1
  fi

  local DESKTOP_FILE="$1"
  local CATEGORY="$2"
  local DESKTOP_PATH="$HOME/.local/share/applications/$DESKTOP_FILE"

  if [ ! -f "$DESKTOP_PATH" ]; then
    echo "Error: $DESKTOP_PATH not found."
    return 1
  fi

  # Remove the category from the Categories field
  if grep -q "^Categories=" "$DESKTOP_PATH"; then
    local NEW_CATEGORIES=$(grep "^Categories=" "$DESKTOP_PATH" | sed "s|Categories=||" | sed "s|$CATEGORY;||g")
    if [ -z "$NEW_CATEGORIES" ]; then
      # Remove the Categories line entirely if empty
      sed -i "/^Categories=/d" "$DESKTOP_PATH"
    else
      sed -i "s|^Categories=.*|Categories=$NEW_CATEGORIES|" "$DESKTOP_PATH"
    fi
    update-desktop-database "$HOME/.local/share/applications" >/dev/null 2>&1
    echo "$DESKTOP_FILE removed from category $CATEGORY."
  else
    echo "No Categories field found in $DESKTOP_FILE."
  fi
}

  local DESKTOP_FILE="$1"
  local CATEGORY="$2"
  local DESKTOP_PATH="$HOME/.local/share/applications/$DESKTOP_FILE"

  if [ ! -f "$DESKTOP_PATH" ]; then
    echo "Error: $DESKTOP_PATH not found."
    return 1
  fi

  # Remove the category from the Categories field
  if grep -q "^Categories=" "$DESKTOP_PATH"; then
    local NEW_CATEGORIES=$(grep "^Categories=" "$DESKTOP_PATH" | sed "s|Categories=||" | sed "s|$CATEGORY;||g")
    if [ -z "$NEW_CATEGORIES" ]; then
      # Remove the Categories line entirely if empty
      sed -i "/^Categories=/d" "$DESKTOP_PATH"
    else
      sed -i "s|^Categories=.*|Categories=$NEW_CATEGORIES|" "$DESKTOP_PATH"
    fi
    update-desktop-database "$HOME/.local/share/applications" >/dev/null 2>&1
    echo "$DESKTOP_FILE removed from category $CATEGORY."
  else
    echo "No Categories field found in $DESKTOP_FILE."
  fi
}

# Ensure that external keyboards that use an fn key has the F keys as the default
alias fix_fkeys='echo 2 | sudo tee /sys/module/hid_apple/parameters/fnmode'

# Spotify window is too large on many displays, so fix this by zooming it down
alias fix_spotify_window_size="sudo sed -i 's|^Exec=.*|Exec=spotify --force-device-scale-factor=1.5 %U|' /usr/local/share/applications/spotify.desktop"
